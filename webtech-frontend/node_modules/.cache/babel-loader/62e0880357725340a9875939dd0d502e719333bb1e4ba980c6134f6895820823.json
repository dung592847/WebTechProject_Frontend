{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      departure_city: \"\",\n      arrival_city: \"\",\n      traveller: \"\",\n      departure_date: \"\",\n      searchresultsDeparture: [],\n      searchresultsArrival: [],\n      arrival_city_result: null,\n      departure_city_result: null,\n      api_url: \"http://localhost:8081/api/AirportRestAPI/municipality/\",\n      // https://jsonplaceholder.typicode.com/comments\n      flightData: null,\n      loading: false,\n      error: null\n    };\n  },\n  methods: {\n    // API-Anfrage testen\n    async handleDepartureAutocomplete() {\n      console.log(\"Starte API-Anfrage...\");\n      const query = this.departure_city.trim();\n      if (!query) {\n        console.log(\"Eingabe leer, Anfrage abgebrochen.\");\n        return;\n      }\n      try {\n        const response = await fetch(this.api_url + this.departure_city, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        this.searchresultsDeparture = data;\n        console.log(\"API-Antwort erfolgreich:\", this.searchresultsDeparture);\n      } catch (error) {\n        console.error(\"Fehler bei der API-Anfrage:\", error);\n      }\n    },\n    // API-Anfrage testen\n    async handleArrivalAutocomplete() {\n      console.log(\"Starte API-Anfrage...\");\n      const query = this.arrival_city.trim();\n      if (!query) {\n        console.log(\"Eingabe leer, Anfrage abgebrochen.\");\n        return;\n      }\n      try {\n        const response = await fetch(this.api_url + this.arrival_city, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        this.searchresultsArrival = data;\n        console.log(\"API-Antwort erfolgreich:\", this.searchresultsArrival);\n      } catch (error) {\n        console.error(\"Fehler bei der API-Anfrage:\", error);\n      }\n    },\n    async sendSearchRequest() {\n      // Überprüfen ob Städte ausgewählt wurden\n      if (!this.departure_city_result || !this.arrival_city_result) {\n        console.error(\"Bitte wählen Sie Abflug- und Zielflughafen aus\");\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      this.flightData = null;\n      try {\n        console.log(\"Departure City Result:\", this.departure_city_result);\n        console.log(\"Arrival City Result:\", this.arrival_city_result);\n\n        // IATA-Codes aus den Ergebnisobjekten extrahieren\n        const depIata = this.departure_city_result.iata_code;\n        const arrIata = this.arrival_city_result.iata_code;\n        console.log(\"Sending request with IATA codes:\", depIata, arrIata);\n        const response = await axios.get(\"https://api.aviationstack.com/v1/flights\", {\n          params: {\n            access_key: \"\",\n            dep_iata: depIata,\n            arr_iata: arrIata\n          }\n        });\n        if (response.data.error) {\n          throw new Error(response.data.error.message);\n        }\n        this.flightData = response.data;\n        console.log(\"Received flight data:\", this.flightData);\n      } catch (err) {\n        console.error(\"API Error:\", err);\n        this.error = \"Fehler beim Abrufen der Flugdaten: \" + err.message;\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleArrivalClick(result) {\n      this.arrival_city = result.municipality + \" (\" + result.country + \")\";\n      this.arrival_city_result = result;\n      this.searchresultsArrival.length = 0;\n    },\n    handleDepartureClick(result) {\n      this.departure_city = result.municipality + \" (\" + result.country + \")\";\n      this.departure_city_result = result;\n      this.searchresultsDeparture.length = 0;\n    },\n    closeAutocomplete() {\n      this.searchresultsDeparture.length = 0;\n      this.searchresultsArrival.length = 0;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","departure_city","arrival_city","traveller","departure_date","searchresultsDeparture","searchresultsArrival","arrival_city_result","departure_city_result","api_url","flightData","loading","error","methods","handleDepartureAutocomplete","console","log","query","trim","response","fetch","method","headers","ok","Error","status","json","handleArrivalAutocomplete","sendSearchRequest","depIata","iata_code","arrIata","get","params","access_key","dep_iata","arr_iata","message","err","handleArrivalClick","result","municipality","country","length","handleDepartureClick","closeAutocomplete"],"sources":["C:\\Users\\DUNG\\WebTechProject_Frontend\\webtech-frontend\\src\\components\\Searchbar.vue"],"sourcesContent":["<template>\r\n    <head>\r\n    <link\r\n      href=\"https://cdn.jsdelivr.net/npm/remixicon@3.4.0/fonts/remixicon.css\"\r\n      rel=\"stylesheet\"\r\n    />\r\n  </head>\r\n    <div class=\"booking__container\" @click=\"closeAutocomplete\">\r\n          <form>\r\n            <div class=\"form__group\">\r\n              <div class=\"input__group\">\r\n                <input type=\"text\" @keyup=\"handleDepartureAutocomplete\" required  v-model=\"departure_city\" placeholder=\" \"/>\r\n                <div class=\"autocomplete-wrapper\" v-if=\"searchresultsDeparture.length>0\">\r\n                  <div class=\"autocomplete-box\">\r\n                    <ul>\r\n      <!-- Nur die ersten 5 Ergebnisse anzeigen -->\r\n                      <li v-for=\"(result, index) in searchresultsDeparture.slice(0, 5)\" :key=\"index\" @click=\"handleDepartureClick(result)\">\r\n                        {{ result.municipality }} ({{ result.country }})\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <label>From</label>\r\n              </div>\r\n              <p>From where are you going?</p>\r\n            </div>\r\n            <div class=\"form__group\">\r\n              <div class=\"input__group\">\r\n                <input type=\"text\" required @keyup=\"handleArrivalAutocomplete\" v-model=\"arrival_city\" placeholder=\" \" />\r\n                <div class=\"autocomplete-wrapper\" v-if=\"searchresultsArrival.length>0\">\r\n                  <div class=\"autocomplete-box\">\r\n                    <ul>\r\n      <!-- Nur die ersten 5 Ergebnisse anzeigen -->\r\n                      <li v-for=\"(result, index) in searchresultsArrival.slice(0, 5)\" :key=\"index\" @click=\"handleArrivalClick(result)\">\r\n                        {{ result.municipality }} ({{ result.country }})\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <label>To</label>\r\n              </div>\r\n              <p>Where are you going?</p>\r\n            </div>\r\n            <div class=\"form__group\">\r\n              <div class=\"input__group\">\r\n                <input type=\"date\" required v-model=\"departure_date\" placeholder=\" \" />\r\n                <label>Duration</label>\r\n              </div>\r\n              <p>Add date</p>\r\n            </div>\r\n            <div class=\"form__group\">\r\n              <div class=\"input__group\">\r\n                <input type=\"text\" required  v-model=\"traveller\" placeholder=\" \"/>\r\n                <label>Travellers</label>\r\n              </div>\r\n              <p>Add Traveller</p>\r\n            </div>\r\n          </form>\r\n         \r\n          <router-link to=\"/search-result\"><button class=\"btn\" @click=\"sendSearchRequest\"><i class=\"ri-search-line\"></i></button></router-link>\r\n          <!--Add @click Function later-->\r\n        </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n  import axios from \"axios\"\r\n  \r\n  export default{\r\n    data(){\r\n      return{\r\n        departure_city: \"\",\r\n        arrival_city: \"\",\r\n        traveller: \"\",\r\n        departure_date: \"\",\r\n        searchresultsDeparture: [],\r\n        searchresultsArrival: [],\r\n        arrival_city_result: null,\r\n        departure_city_result: null,\r\n        api_url: \"http://localhost:8081/api/AirportRestAPI/municipality/\", // https://jsonplaceholder.typicode.com/comments\r\n        flightData: null,\r\n      loading: false,\r\n      error: null\r\n      }\r\n    },\r\n    methods: {\r\n    // API-Anfrage testen\r\n    async handleDepartureAutocomplete() {\r\n      console.log(\"Starte API-Anfrage...\");\r\n      const query = this.departure_city.trim();\r\n      if (!query) {\r\n        console.log(\"Eingabe leer, Anfrage abgebrochen.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(this.api_url+this.departure_city\r\n          ,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        this.searchresultsDeparture = data\r\n      \r\n        console.log(\"API-Antwort erfolgreich:\", this.searchresultsDeparture );\r\n        \r\n      } catch (error) {\r\n        console.error(\"Fehler bei der API-Anfrage:\", error);\r\n      }\r\n    },\r\n     // API-Anfrage testen\r\n     async handleArrivalAutocomplete() {\r\n      console.log(\"Starte API-Anfrage...\");\r\n      const query = this.arrival_city.trim();\r\n      if (!query) {\r\n        console.log(\"Eingabe leer, Anfrage abgebrochen.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\r\n          this.api_url+this.arrival_city, \r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        this.searchresultsArrival = data\r\n      \r\n        console.log(\"API-Antwort erfolgreich:\", this.searchresultsArrival );\r\n        \r\n      } catch (error) {\r\n        console.error(\"Fehler bei der API-Anfrage:\", error);\r\n      }\r\n    },\r\n    async sendSearchRequest() {\r\n      // Überprüfen ob Städte ausgewählt wurden\r\n      if (!this.departure_city_result || !this.arrival_city_result) {\r\n        console.error(\"Bitte wählen Sie Abflug- und Zielflughafen aus\");\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = null;\r\n      this.flightData = null;\r\n\r\n      try {\r\n        console.log(\"Departure City Result:\", this.departure_city_result);\r\n        console.log(\"Arrival City Result:\", this.arrival_city_result);\r\n\r\n        // IATA-Codes aus den Ergebnisobjekten extrahieren\r\n        const depIata = this.departure_city_result.iata_code;\r\n        const arrIata = this.arrival_city_result.iata_code;\r\n        \r\n        console.log(\"Sending request with IATA codes:\", depIata, arrIata);\r\n\r\n        const response = await axios.get(\r\n          \"https://api.aviationstack.com/v1/flights\",\r\n          {\r\n            params: {\r\n              access_key: \"\",\r\n              dep_iata: depIata, \r\n              arr_iata: arrIata\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.data.error) {\r\n          throw new Error(response.data.error.message);\r\n        }\r\n\r\n        this.flightData = response.data;\r\n        console.log(\"Received flight data:\", this.flightData);\r\n\r\n      } catch (err) {\r\n        console.error(\"API Error:\", err);\r\n        this.error = \"Fehler beim Abrufen der Flugdaten: \" + err.message;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    handleArrivalClick(result){\r\n      this.arrival_city = result.municipality + \" (\" +result.country+\")\"\r\n      this.arrival_city_result = result\r\n      this.searchresultsArrival.length = 0\r\n    },\r\n    handleDepartureClick(result){\r\n      this.departure_city = result.municipality + \" (\" +result.country+\")\"\r\n      this.departure_city_result = result\r\n      this.searchresultsDeparture.length = 0\r\n    },\r\n    closeAutocomplete(){\r\n      this.searchresultsDeparture.length = 0\r\n      this.searchresultsArrival.length = 0\r\n    }\r\n    \r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n\r\n.booking__container {\r\n  position: absolute;\r\n  bottom: -5rem;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: calc(100% - 6rem);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 3rem 2rem;\r\n  border-radius: 2rem;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 5px 5px 30px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.booking__container form {\r\n  width: 100%;\r\n  flex: 1;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 1rem;\r\n}\r\n\r\n.booking__container .input__group {\r\n  width: 100%;\r\n  position: relative;\r\n  \r\n}\r\n\r\n.booking__container label {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  font-size: 1.4rem;\r\n  font-weight: 500;\r\n  color: var(--text-dark);\r\n  pointer-events: none;\r\n  transition: 0.3s;\r\n\r\n}\r\n\r\n.booking__container input {\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  border-bottom: 1px solid var(--primary-color);\r\n  color: var(--text-dark);\r\n}\r\n\r\n.booking__container input:focus ~ label {\r\n  font-size: 0.8rem;\r\n  top: 0;\r\n}\r\n\r\n.booking__container .form__group p {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.8rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.booking__container .btn {\r\n  padding: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: var(--white);\r\n  background-color: var(--primary-color);\r\n  border-radius: 100%;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n}\r\n\r\n.booking__container .btn:hover {\r\n  background-color: var(--primary-color-dark);\r\n}\r\n\r\n\r\n.booking__container input:focus ~ label,\r\n.booking__container input:not(:placeholder-shown) ~ label {\r\n  font-size: 0.8rem;\r\n  top: 0;\r\n  color: var(--primary-color); \r\n}\r\n\r\n.autocomplete-wrapper {\r\n  position: absolute; /* Unabhängig vom Fluss positionieren */\r\n  top: 100%; /* Direkt unter dem Input */\r\n  left: 0; /* Gleiche horizontale Ausrichtung wie der Input */\r\n  width: 100%; /* Gleiche Breite wie das Input-Feld */\r\n  background-color: white; /* Hintergrundfarbe für besseren Kontrast */\r\n  border: 1px solid #ccc; /* Optional: Umrandung für bessere Sichtbarkeit */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: Schatten für einen schwebenden Effekt */\r\n  z-index: 100; /* Über anderen Elementen anzeigen */\r\n  border-bottom-left-radius: 10px;\r\n  border-bottom-right-radius: 10px;\r\n}\r\n\r\n.autocomplete-box ul {\r\n  list-style: none; /* Bullet-Points entfernen */\r\n  margin: 0; /* Abstand entfernen */\r\n  padding: 0; /* Abstand entfernen */\r\n  max-height: 300px; /* Maximalhöhe setzen */\r\n  overflow-y: auto; /* Scrollbar, falls die Ergebnisse die Maximalhöhe überschreiten */\r\n}\r\n\r\n.autocomplete-box li {\r\n  padding: 10px; /* Abstand um den Text */\r\n  cursor: pointer; /* Mauszeiger ändern */\r\n}\r\n\r\n.autocomplete-box li:hover {\r\n  background-color: #f0f0f0; /* Hover-Effekt */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}