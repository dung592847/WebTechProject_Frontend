{"ast":null,"code":"export default {\n  name: 'Contactform',\n  data() {\n    return {\n      registrationObject: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        city: \"\",\n        country: \"\",\n        phoneNumber: \"\",\n        adress: \"\",\n        postalCode: \"\",\n        gender: \"\",\n        role: \"USER\"\n      },\n      isLoggedIn: false\n    };\n  },\n  methods: {\n    async createUser() {\n      this.$store.commit(\"setRegistrationObjectToObject\", this.registrationObject);\n      await this.$store.dispatch(\"createAccount\");\n      await this.$store.dispatch(\"loginAccount\", {\n        emailUser: this.registrationObject.email,\n        passwordUser: this.registrationObject.password\n      });\n    },\n    async checkAuthStatus() {\n      try {\n        const token = localStorage.getItem('auth_token');\n\n        // Senden der Anfrage mit nur dem Token\n        const response = await fetch(this.$store.state.urlObject.userUrl + '/check-auth', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            token\n          }) // Das Token korrekt verpackt in ein JSON-Objekt\n        });\n\n        // Prüfen, ob die Anfrage erfolgreich war\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n\n        // Die Antwort parsen\n        const isTokenValid = await response.json();\n\n        // Token-Validierung überprüfen\n        if (isTokenValid.tokenValid === true) {\n          this.isLoggedIn = true;\n        } else {\n          this.isLoggedIn = false;\n        }\n      } catch (error) {\n        console.error(\"Fehler bei der Token-Überprüfung:\", error);\n        this.isLoggedIn = false;\n      }\n    }\n  },\n  mounted() {\n    this.checkAuthStatus(); // Status bei Initialisierung überprüfen\n  }\n};","map":{"version":3,"names":["name","data","registrationObject","firstName","lastName","email","password","city","country","phoneNumber","adress","postalCode","gender","role","isLoggedIn","methods","createUser","$store","commit","dispatch","emailUser","passwordUser","checkAuthStatus","token","localStorage","getItem","response","fetch","state","urlObject","userUrl","method","headers","body","JSON","stringify","ok","Error","status","isTokenValid","json","tokenValid","error","console","mounted"],"sources":["C:\\Users\\DUNG\\WebTechProject_Frontend\\webtechprojekt_frontend\\src\\components\\Contactform.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!isLoggedIn\" class=\"divBody2\">\r\n    <div class=\"title\">Contact</div>\r\n    <form @submit.prevent=\"createUser\">\r\n      <div class=\"user-details\">\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">First Name</span>\r\n          <input type=\"text\" placeholder=\"first name\" v-model=\"registrationObject.firstName\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Last Name</span>\r\n          <input type=\"text\" placeholder=\"last name\" v-model=\"registrationObject.lastName\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">E-Mail</span>\r\n          <input type=\"text\" placeholder=\"E-Mail\" v-model=\"registrationObject.email\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Confirm E-Mail</span>\r\n          <input type=\"text\" placeholder=\"confirm E-Mail\" v-model=\"registrationObject.confirmEmail\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Password</span>\r\n          <input type=\"password\" placeholder=\"password\" v-model=\"registrationObject.password\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Phone Number</span>\r\n          <input type=\"text\" placeholder=\"phone number\" v-model=\"registrationObject.phoneNumber\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Address</span>\r\n          <input type=\"text\" placeholder=\"address\" v-model=\"registrationObject.address\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Postal Code</span>\r\n          <input type=\"text\" placeholder=\"postal code\" v-model=\"registrationObject.postalCode\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">City</span>\r\n          <input type=\"text\" placeholder=\"city\" v-model=\"registrationObject.city\" required />\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <span class=\"details\">Country</span>\r\n          <input type=\"text\" placeholder=\"country\" v-model=\"registrationObject.country\" required />\r\n        </div>\r\n      </div>\r\n      <div class=\"data-details\">\r\n        <input type=\"radio\" name=\"gender\" id=\"dot-1\" v-model=\"registrationObject.gender\" value=\"male\" />\r\n        <input type=\"radio\" name=\"gender\" id=\"dot-2\" v-model=\"registrationObject.gender\" value=\"female\" />\r\n        <span class=\"save-Data\">Gender</span>\r\n        <div class=\"category\">\r\n          <label for=\"dot-1\">\r\n            <span class=\"dot one\"></span>\r\n            <span class=\"data\">Male</span>\r\n          </label>\r\n          <label for=\"dot-2\">\r\n            <span class=\"dot two\"></span>\r\n            <span class=\"data\">Female</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"button\">\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Contactform',\r\n    data() {\r\n    return {\r\n      registrationObject:{\r\n      firstName:\"\",\r\n      lastName:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      city:\"\",\r\n      country:\"\",\r\n      phoneNumber:\"\",\r\n      adress:\"\",\r\n      postalCode:\"\",\r\n      gender :\"\",\r\n      role: \"USER\"\r\n\r\n    },\r\n    isLoggedIn: false\r\n    }\r\n  },\r\n  methods:{\r\n    \r\n    async createUser(){\r\n    this.$store.commit(\"setRegistrationObjectToObject\",this.registrationObject)\r\n    await this.$store.dispatch(\"createAccount\");\r\n\r\n    await this.$store.dispatch(\"loginAccount\",{emailUser: this.registrationObject.email,passwordUser: this.registrationObject.password});\r\n\r\n    \r\n  },\r\n  async checkAuthStatus() {\r\ntry {\r\nconst token =   localStorage.getItem('auth_token'); \r\n\r\n\r\n// Senden der Anfrage mit nur dem Token\r\nconst response = await fetch(this.$store.state.urlObject.userUrl + '/check-auth', {\r\n  method: 'POST',\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  body: JSON.stringify({ token }) // Das Token korrekt verpackt in ein JSON-Objekt\r\n});\r\n\r\n// Prüfen, ob die Anfrage erfolgreich war\r\nif (!response.ok) {\r\n  throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n}\r\n\r\n// Die Antwort parsen\r\nconst isTokenValid = await response.json();\r\n\r\n// Token-Validierung überprüfen\r\nif (isTokenValid.tokenValid === true) {\r\n  this.isLoggedIn = true;\r\n} else {\r\n  this.isLoggedIn = false;\r\n}\r\n\r\n} catch (error) {\r\nconsole.error(\"Fehler bei der Token-Überprüfung:\", error);\r\nthis.isLoggedIn = false;\r\n}\r\n}\r\n\r\n  \r\n},\r\n\r\n   \r\n\r\n    mounted() {\r\n  this.checkAuthStatus(); // Status bei Initialisierung überprüfen\r\n\r\n}\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .divBody {\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n    background: white;\r\n  }\r\n  \r\n  .divBody2 {\r\n    max-width: 1000px;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 25px 30px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  .divBody2 .title {\r\n    font-size: 25px;\r\n    font-weight: 500;\r\n    position: relative;\r\n  }\r\n  \r\n  .divBody2 .title::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    height: 3px;\r\n    width: 30px;\r\n    border-radius: 5px;\r\n    \r\n  }\r\n  \r\n  .divBody2 form .user-details {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin: 20px 0 12px 0;\r\n  }\r\n  \r\n  .user-details .input-box .details {\r\n    display: block;\r\n    font-weight: 500;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  form .user-details .input-box {\r\n    margin-bottom: 15px;\r\n    width: calc(100% / 2 - 20px);\r\n  }\r\n  \r\n  .user-details .input-box input {\r\n    height: 45px;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 16px;\r\n    border-radius: 5px;\r\n    padding-left: 15px;\r\n    border: 1px solid #ccc;\r\n    border-bottom-width: 2px;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .user-details .input-box input:focus,\r\n  .user-details .input-box input:valid {\r\n    border-color: #9b59b6;\r\n  }\r\n  \r\n  form .data-details .save-Data {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  form .data-details .category {\r\n    display: flex;\r\n    width: 80%;\r\n    margin: 14px 0;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .data-details .category label {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .data-details .category .dot {\r\n    height: 18px;\r\n    width: 18px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n    background: #d9d9d9;\r\n    border: 5px solid transparent;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  #dot-1:checked ~ .category label .one,\r\n  #dot-2:checked ~ .category label .two {\r\n    background: #2c3855;\r\n    border-color: #d9d9d9;\r\n  }\r\n  \r\n  form input[type=\"radio\"] {\r\n    display: none;\r\n  }\r\n  form .button {\r\n    height: 45px;\r\n    margin: 35px 0;\r\n  }\r\n  form .button input {\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: none;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    background: #2c3855;\r\n  }\r\n  form .button input:hover {\r\n    background: #435681;\r\n  }\r\n  </style>"],"mappings":"AAqEE,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,kBAAkB,EAAC;QACnBC,SAAS,EAAC,EAAE;QACZC,QAAQ,EAAC,EAAE;QACXC,KAAK,EAAC,EAAE;QACRC,QAAQ,EAAC,EAAE;QACXC,IAAI,EAAC,EAAE;QACPC,OAAO,EAAC,EAAE;QACVC,WAAW,EAAC,EAAE;QACdC,MAAM,EAAC,EAAE;QACTC,UAAU,EAAC,EAAE;QACbC,MAAK,EAAG,EAAE;QACVC,IAAI,EAAE;MAER,CAAC;MACDC,UAAU,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAC;IAEN,MAAMC,UAAUA,CAAA,EAAE;MAClB,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,+BAA+B,EAAC,IAAI,CAAChB,kBAAkB;MAC1E,MAAM,IAAI,CAACe,MAAM,CAACE,QAAQ,CAAC,eAAe,CAAC;MAE3C,MAAM,IAAI,CAACF,MAAM,CAACE,QAAQ,CAAC,cAAc,EAAC;QAACC,SAAS,EAAE,IAAI,CAAClB,kBAAkB,CAACG,KAAK;QAACgB,YAAY,EAAE,IAAI,CAACnB,kBAAkB,CAACI;MAAQ,CAAC,CAAC;IAGtI,CAAC;IACD,MAAMgB,eAAeA,CAAA,EAAG;MAC1B,IAAI;QACJ,MAAMC,KAAI,GAAMC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;QAGlD;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,IAAI,CAACV,MAAM,CAACW,KAAK,CAACC,SAAS,CAACC,OAAM,GAAI,aAAa,EAAE;UAChFC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEZ;UAAM,CAAC,EAAE;QAClC,CAAC,CAAC;;QAEF;QACA,IAAI,CAACG,QAAQ,CAACU,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBX,QAAQ,CAACY,MAAM,EAAE,CAAC;QAC5D;;QAEA;QACA,MAAMC,YAAW,GAAI,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;;QAE1C;QACA,IAAID,YAAY,CAACE,UAAS,KAAM,IAAI,EAAE;UACpC,IAAI,CAAC3B,UAAS,GAAI,IAAI;QACxB,OAAO;UACL,IAAI,CAACA,UAAS,GAAI,KAAK;QACzB;MAEA,EAAE,OAAO4B,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD,IAAI,CAAC5B,UAAS,GAAI,KAAK;MACvB;IACA;EAGA,CAAC;EAIG8B,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACtB,eAAe,CAAC,CAAC,EAAE;EAE1B;AACE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}