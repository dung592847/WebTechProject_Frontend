{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      rows: Array.from({\n        length: 10\n      }, (_, i) => i),\n      // 0-9 für Reihen 1-10\n      selectedSeats: [],\n      occupiedSeats: [\"2B\", \"5D\", \"6C\", \"9E\"] // Beispielhaft besetzte Sitzplätze\n    };\n  },\n  methods: {\n    toggleSeat(seatId) {\n      if (this.isOccupied(seatId)) return; // Keine Aktion bei besetzten Sitzen\n      if (this.selectedSeats.includes(seatId)) {\n        this.selectedSeats = this.selectedSeats.filter(id => id !== seatId);\n        this.$store.commit(\"removeFromSeatsList\", {\n          seatId\n        });\n      } else {\n        // Prüfe, ob die maximale Anzahl erreicht ist\n        if (this.selectedSeats.length >= this.$store.state.userInputObject.traveller) {\n          alert(`Sie können maximal ${this.$store.state.userInputObject.traveller} Sitzplätze auswählen.`);\n          return;\n        }\n        this.$store.commit(\"addToSeatsList\", {\n          seatId\n        });\n        console.log(this.$store.state.seatsList);\n        this.selectedSeats.push(seatId);\n      }\n    },\n    isSelected(seatId) {\n      return this.selectedSeats.includes(seatId);\n    },\n    isOccupied(seatId) {\n      return this.occupiedSeats.includes(seatId);\n    }\n  }\n};","map":{"version":3,"names":["data","rows","Array","from","length","_","i","selectedSeats","occupiedSeats","methods","toggleSeat","seatId","isOccupied","includes","filter","id","$store","commit","state","userInputObject","traveller","alert","console","log","seatsList","push","isSelected"],"sources":["C:\\Users\\DUNG\\WebTechProject_Frontend\\webtechprojekt_frontend\\src\\components\\AirplaneSeats.vue"],"sourcesContent":["<template>\r\n    <div class=\"seat-selection\">\r\n        <br>\r\n        <h1 class=\"title\">Choose a seat</h1>\r\n\r\n        <!-- Sitzbereiche -->\r\n        <div class=\"seat-section\">\r\n            <div class=\"cabin-label business-label\">Business Class</div>\r\n            <div class=\"cabin-label economy-label\">Economy Class</div>\r\n            \r\n            <div class=\"seat-container\">\r\n                <div class=\"row\" v-for=\"(row, rowIndex) in rows\" :key=\"rowIndex\">\r\n                    <!-- Linke Sitzgruppe (ABC) -->\r\n                    <div class=\"seat-group left\">\r\n                        <div \r\n                            v-for=\"letter in ['A', 'B', 'C']\" \r\n                            :key=\"letter\"\r\n                            class=\"seat\"\r\n                            :class=\"{ \r\n                                selected: isSelected(`${rowIndex + 1}${letter}`), \r\n                                occupied: isOccupied(`${rowIndex + 1}${letter}`),\r\n                                business: rowIndex < 2\r\n                            }\"\r\n                            @click=\"toggleSeat(`${rowIndex + 1}${letter}`)\"\r\n                        >\r\n                            {{ rowIndex + 1 }}{{ letter }}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Gang -->\r\n                    <div class=\"aisle\"></div>\r\n\r\n                    <!-- Rechte Sitzgruppe (DEF) -->\r\n                    <div class=\"seat-group right\">\r\n                        <div \r\n                            v-for=\"letter in ['D', 'E', 'F']\" \r\n                            :key=\"letter\"\r\n                            class=\"seat\"\r\n                            :class=\"{ \r\n                                selected: isSelected(`${rowIndex + 1}${letter}`), \r\n                                occupied: isOccupied(`${rowIndex + 1}${letter}`),\r\n                                business: rowIndex < 2\r\n                            }\"\r\n                            @click=\"toggleSeat(`${rowIndex + 1}${letter}`)\"\r\n                        >\r\n                            {{ rowIndex + 1 }}{{ letter }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Erweiterte Legende -->\r\n        <div class=\"legend\">\r\n            <div class=\"legend-item\">\r\n                <div class=\"seat unselected\"></div>\r\n                <span>Unbesetzt</span>\r\n            </div>\r\n            <div class=\"legend-item\">\r\n                <div class=\"seat occupied\"></div>\r\n                <span>Besetzt</span>\r\n            </div>\r\n            <div class=\"legend-item\">\r\n                <div class=\"seat selected\"></div>\r\n                <span>Ausgewählt</span>\r\n            </div>\r\n            <div class=\"legend-item\">\r\n                <div class=\"seat business\"></div>\r\n                <span>Business Class</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            rows: Array.from({ length: 10 }, (_, i) => i), // 0-9 für Reihen 1-10\r\n            selectedSeats: [],\r\n            occupiedSeats: [\"2B\", \"5D\", \"6C\", \"9E\"] // Beispielhaft besetzte Sitzplätze\r\n        };\r\n    },\r\n    methods: {\r\n        toggleSeat(seatId) {\r\n            if (this.isOccupied(seatId)) return; // Keine Aktion bei besetzten Sitzen\r\n            if (this.selectedSeats.includes(seatId)) {\r\n                this.selectedSeats = this.selectedSeats.filter(id => id !== seatId);\r\n                this.$store.commit(\"removeFromSeatsList\", {seatId});\r\n            } else {\r\n                  // Prüfe, ob die maximale Anzahl erreicht ist\r\n                if (this.selectedSeats.length >= this.$store.state.userInputObject.traveller) {\r\n                    alert(`Sie können maximal ${this.$store.state.userInputObject.traveller} Sitzplätze auswählen.`);\r\n                    return;\r\n                }\r\n            this.$store.commit(\"addToSeatsList\",{seatId})\r\n            console.log(this.$store.state.seatsList)\r\n            this.selectedSeats.push(seatId);\r\n            }\r\n        },\r\n        isSelected(seatId) {\r\n            return this.selectedSeats.includes(seatId);\r\n        },\r\n        isOccupied(seatId) {\r\n            return this.occupiedSeats.includes(seatId);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.seat-selection {\r\n    text-align: center;\r\n    padding: 20px;\r\n    padding-top: 0px;\r\n}\r\n\r\n.title {\r\n    font-size: 1.5em;\r\n    margin-bottom: 20px;\r\n    color : #435681;\r\n}\r\n\r\n.seat-section {\r\n    margin: 30px auto;\r\n    \r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    max-width: 600px;\r\n    background-color: white;\r\n    position: relative;\r\n}\r\n\r\n/* Neue Cabin Labels */\r\n.cabin-label {\r\n    position: absolute;\r\n    margin-top: 50px;\r\n    left: 0px;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    width: 100px;\r\n   \r\n}\r\n\r\n.business-label {\r\n    top: 25px;\r\n    color: #435681;\r\n}\r\n\r\n.economy-label {\r\n    top: 120px;\r\n    color: #435681;\r\n}\r\n\r\n.seat-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.seat-group {\r\n    display: flex;\r\n    gap: 8px;\r\n}\r\n\r\n.aisle {\r\n    width: 30px;\r\n}\r\n\r\n.seat {\r\n    width: 45px;\r\n    height: 45px;\r\n    background-color: #ffffff;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: bold;\r\n    transition: all 0.3s;\r\n    font-size: 0.9em;\r\n    box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.seat.business {\r\n    background-color: #f4f4f4;\r\n    border: 2px solid #435681;\r\n}\r\n\r\n.seat.occupied {\r\n    background-color: #ff0000;\r\n    color: white;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.seat.selected {\r\n    background-color: #66cc33;\r\n    color: white;\r\n}\r\n\r\n.seat:hover:not(.occupied) {\r\n    background-color: #d0d0d0;\r\n}\r\n\r\n.legend {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    margin-top: 20px;\r\n    background-color: #f9f9f9;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.legend-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.legend-item .seat {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 4px;\r\n}\r\n\r\n.legend-item span {\r\n    font-size: 0.9em;\r\n}\r\n\r\n.unselected {\r\n    background-color: #e9e9e9;\r\n}\r\n\r\n.occupied {\r\n    background-color: #ff0000;\r\n}\r\n\r\n.selected {\r\n    background-color: #66cc33;\r\n}\r\n\r\n/* Style für Business Class Sitze in der Legende */\r\n.legend-item .seat.business {\r\n    background-color: #f4f4f4;\r\n    border: 2px solid #435681;\r\n}\r\n</style>"],"mappings":";;;AA2EA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;MAAE;MAC/CC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC5C,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,MAAM,EAAE;MACf,IAAI,IAAI,CAACC,UAAU,CAACD,MAAM,CAAC,EAAE,OAAM,CAAE;MACrC,IAAI,IAAI,CAACJ,aAAa,CAACM,QAAQ,CAACF,MAAM,CAAC,EAAE;QACrC,IAAI,CAACJ,aAAY,GAAI,IAAI,CAACA,aAAa,CAACO,MAAM,CAACC,EAAC,IAAKA,EAAC,KAAMJ,MAAM,CAAC;QACnE,IAAI,CAACK,MAAM,CAACC,MAAM,CAAC,qBAAqB,EAAE;UAACN;QAAM,CAAC,CAAC;MACvD,OAAO;QACD;QACF,IAAI,IAAI,CAACJ,aAAa,CAACH,MAAK,IAAK,IAAI,CAACY,MAAM,CAACE,KAAK,CAACC,eAAe,CAACC,SAAS,EAAE;UAC1EC,KAAK,CAAC,sBAAsB,IAAI,CAACL,MAAM,CAACE,KAAK,CAACC,eAAe,CAACC,SAAS,wBAAwB,CAAC;UAChG;QACJ;QACJ,IAAI,CAACJ,MAAM,CAACC,MAAM,CAAC,gBAAgB,EAAC;UAACN;QAAM,CAAC;QAC5CW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAACE,KAAK,CAACM,SAAS;QACvC,IAAI,CAACjB,aAAa,CAACkB,IAAI,CAACd,MAAM,CAAC;MAC/B;IACJ,CAAC;IACDe,UAAUA,CAACf,MAAM,EAAE;MACf,OAAO,IAAI,CAACJ,aAAa,CAACM,QAAQ,CAACF,MAAM,CAAC;IAC9C,CAAC;IACDC,UAAUA,CAACD,MAAM,EAAE;MACf,OAAO,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACF,MAAM,CAAC;IAC9C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}