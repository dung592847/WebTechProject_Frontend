{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default {\n  mounted(el, binding) {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          el.classList.add(binding.value || \"show\"); // Standardklasse: \"show\"\n        } else {\n          el.classList.remove(binding.value || \"show\");\n        }\n      });\n    });\n    observer.observe(el);\n  }\n};","map":{"version":3,"names":["mounted","el","binding","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","add","value","remove","observe"],"sources":["C:/Users/DUNG/WebTechProject_Frontend/webtechprojekt_frontend/src/directives.js"],"sourcesContent":["export default {\r\n    mounted(el, binding) {\r\n      const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            el.classList.add(binding.value || \"show\"); // Standardklasse: \"show\"\r\n          } else {\r\n            el.classList.remove(binding.value || \"show\");\r\n          }\r\n        });\r\n      });\r\n  \r\n      observer.observe(el);\r\n    },\r\n  };"],"mappings":";;AAAA,eAAe;EACXA,OAAOA,CAACC,EAAE,EAAEC,OAAO,EAAE;IACnB,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBP,EAAE,CAACQ,SAAS,CAACC,GAAG,CAACR,OAAO,CAACS,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;QAC7C,CAAC,MAAM;UACLV,EAAE,CAACQ,SAAS,CAACG,MAAM,CAACV,OAAO,CAACS,KAAK,IAAI,MAAM,CAAC;QAC9C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFR,QAAQ,CAACU,OAAO,CAACZ,EAAE,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}