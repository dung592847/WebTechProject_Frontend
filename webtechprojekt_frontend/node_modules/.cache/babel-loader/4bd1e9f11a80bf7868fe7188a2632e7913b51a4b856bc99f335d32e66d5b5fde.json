{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      orders: {}\n    };\n  },\n  methods: {\n    async getTicketsForUser() {\n      try {\n        const token = localStorage.getItem(\"auth_token\"); // Hol dir das Token aus dem Vuex-Store oder lokalem Storage\n        const email = localStorage.getItem(\"email\");\n        console.log(token);\n\n        // Die URL für die Anfrage\n        const url = this.$store.state.urlObject.ticketsUrl + \"/user/\" + email;\n        console.log(url);\n        // Die Anfrage mit dem Bearer Token\n        const response = await fetch(url, {\n          method: \"GET\",\n          // GET-Anfrage\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Kopfzeile für JSON-Daten\n            \"Authorization\": `Bearer ${token}` // Bearer-Token als Authorization-Header\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n        const data = await response.json(); // Antworte die Antwort als JSON\n        this.orders = data;\n        console.log(\"Tickets:\", data); // Zeige die erhaltenen Daten an\n\n        // Optional: Setze den Zustand des Stores oder der Komponente basierend auf den Tickets\n        // this.$store.commit('setTickets', data);\n      } catch (error) {\n        console.error(\"Fehler bei der API-Anfrage:\", error);\n      }\n    },\n    async cancelTicket(ticketId) {\n      try {\n        const token = localStorage.getItem(\"auth_token\");\n\n        // API-URL für das Löschen des Tickets, unter Verwendung der ticket_id\n        const url = `${this.$store.state.urlObject.ticketsUrl}/${ticketId}`;\n        console.log(url);\n        // Anfrage zum Löschen des Tickets\n        const response = await fetch(url, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n\n        // Wenn das Ticket erfolgreich gelöscht wurde, entferne es aus der Liste\n        this.orders = this.orders.filter(order => order.ticket_id !== ticketId);\n        console.log(\"Ticket gelöscht:\", ticketId);\n      } catch (error) {\n        console.error(\"Fehler beim Löschen des Tickets:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getTicketsForUser();\n  }\n};","map":{"version":3,"names":["data","orders","methods","getTicketsForUser","token","localStorage","getItem","email","console","log","url","$store","state","urlObject","ticketsUrl","response","fetch","method","headers","ok","Error","status","json","error","cancelTicket","ticketId","filter","order","ticket_id","mounted"],"sources":["C:\\Users\\DUNG\\WebTechProject_Frontend\\webtechprojekt_frontend\\src\\components\\Orders.vue"],"sourcesContent":["<template>\r\n    <div class=\"orders-container\">\r\n      <h1>My Tickets</h1>\r\n      <table v-if=\"orders.length > 0\">\r\n        <thead>\r\n          <tr>\r\n\r\n            <th>FlightNumber</th>\r\n            <th>Departure</th>\r\n            <th>Destination</th>\r\n            <th>Date</th>\r\n            <th>Seat</th>  \r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"order in orders\" :key=\"order.id\">\r\n            <td>{{ order.ticket_id }}</td>\r\n            <td>{{ order.departure }}</td>\r\n            <td>{{ order.destination }}</td>\r\n            <td>{{ order.date }}</td>\r\n            <td>{{ order.seat }}</td>\r\n            <td id=\"button-wrapper\"  @click=\"cancelTicket(order.ticket_id)\">\r\n             Cancel Ticket\r\n             \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-else>No tickets found.</p>\r\n  \r\n      <router-link to=\"/\" class=\"back-button\">Back To Homepage</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        orders: {}\r\n      };\r\n    },\r\n    methods: {\r\n      async getTicketsForUser() {\r\n  try {\r\n    const token =  localStorage.getItem(\"auth_token\") // Hol dir das Token aus dem Vuex-Store oder lokalem Storage\r\n    const email = localStorage.getItem(\"email\"); \r\n\r\n    console.log(token)\r\n\r\n    // Die URL für die Anfrage\r\n    const url = this.$store.state.urlObject.ticketsUrl+\"/user/\"+email;\r\n    console.log(url)\r\n    // Die Anfrage mit dem Bearer Token\r\n    const response = await fetch(url, {\r\n      method: \"GET\",  // GET-Anfrage\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",  // Kopfzeile für JSON-Daten\r\n        \"Authorization\": `Bearer ${token}`,  // Bearer-Token als Authorization-Header\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();  // Antworte die Antwort als JSON\r\n    this.orders = data\r\n    console.log(\"Tickets:\", data); // Zeige die erhaltenen Daten an\r\n\r\n    // Optional: Setze den Zustand des Stores oder der Komponente basierend auf den Tickets\r\n    // this.$store.commit('setTickets', data);\r\n\r\n  } catch (error) {\r\n    console.error(\"Fehler bei der API-Anfrage:\", error);\r\n  }\r\n},\r\nasync cancelTicket(ticketId) {\r\n      try {\r\n        const token = localStorage.getItem(\"auth_token\");\r\n\r\n        // API-URL für das Löschen des Tickets, unter Verwendung der ticket_id\r\n        const url = `${this.$store.state.urlObject.ticketsUrl}/${ticketId}`;\r\n        console.log(url)\r\n        // Anfrage zum Löschen des Tickets\r\n        const response = await fetch(url, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n        }\r\n\r\n        // Wenn das Ticket erfolgreich gelöscht wurde, entferne es aus der Liste\r\n        this.orders = this.orders.filter(order => order.ticket_id !== ticketId);\r\n        console.log(\"Ticket gelöscht:\", ticketId);\r\n      } catch (error) {\r\n        console.error(\"Fehler beim Löschen des Tickets:\", error);\r\n      }\r\n    },\r\n\r\n      \r\n    },\r\n    mounted(){\r\n      this.getTicketsForUser()\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n\r\n\r\n  #button-wrapper{\r\n    padding: 0%;\r\n    background-color: red;\r\n    color: white;\r\n    text-align: center;\r\n    width: 120px;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0%\r\n  }\r\n\r\n  #button-wrapper:hover {\r\n    background-color: #921a11;\r\n  }\r\n\r\n  .orders-container {\r\n    max-width: 800px;\r\n    margin: auto;\r\n    padding: 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ccc;\r\n    padding: 0.8rem;\r\n    text-align: left;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f4f4f4;\r\n  }\r\n  \r\n  td {\r\n    background-color: #fff;\r\n  }\r\n  \r\n  p {\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n  }\r\n  \r\n  .back-button {\r\n    display: block;\r\n    margin-top: 1rem;\r\n    padding: 0.8rem 1.2rem;\r\n    text-align: center;\r\n    background-color: #007BFF;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .back-button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AAoCE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MAC9B,IAAI;QACF,MAAMC,KAAI,GAAKC,YAAY,CAACC,OAAO,CAAC,YAAY,GAAE;QAClD,MAAMC,KAAI,GAAIF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3CE,OAAO,CAACC,GAAG,CAACL,KAAK;;QAEjB;QACA,MAAMM,GAAE,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAS,CAACC,UAAU,GAAC,QAAQ,GAACP,KAAK;QACjEC,OAAO,CAACC,GAAG,CAACC,GAAG;QACf;QACA,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAACN,GAAG,EAAE;UAChCO,MAAM,EAAE,KAAK;UAAG;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAAG;YACrC,eAAe,EAAE,UAAUd,KAAK,EAAE,CAAG;UACvC;QACF,CAAC,CAAC;QAEF,IAAI,CAACW,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBL,QAAQ,CAACM,MAAM,EAAE,CAAC;QAC5D;QAEA,MAAMrB,IAAG,GAAI,MAAMe,QAAQ,CAACO,IAAI,CAAC,CAAC,EAAG;QACrC,IAAI,CAACrB,MAAK,GAAID,IAAG;QACjBQ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAET,IAAI,CAAC,EAAE;;QAE/B;QACA;MAEF,EAAE,OAAOuB,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACD,MAAMC,YAAYA,CAACC,QAAQ,EAAE;MACvB,IAAI;QACF,MAAMrB,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;QAEhD;QACA,MAAMI,GAAE,GAAI,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAS,CAACC,UAAU,IAAIW,QAAQ,EAAE;QACnEjB,OAAO,CAACC,GAAG,CAACC,GAAG;QACf;QACA,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAACN,GAAG,EAAE;UAChCO,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUd,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAI,CAACW,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBL,QAAQ,CAACM,MAAM,EAAE,CAAC;QAC5D;;QAEA;QACA,IAAI,CAACpB,MAAK,GAAI,IAAI,CAACA,MAAM,CAACyB,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,SAAQ,KAAMH,QAAQ,CAAC;QACvEjB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEgB,QAAQ,CAAC;MAC3C,EAAE,OAAOF,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EAGA,CAAC;EACDM,OAAOA,CAAA,EAAE;IACP,IAAI,CAAC1B,iBAAiB,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}