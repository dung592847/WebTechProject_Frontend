{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ContinueButton',\n  data() {\n    return {\n      showModal: false\n    };\n  },\n  methods: {\n    async handleReturn() {\n      this.showModal = true;\n      //this.$store.dispatch(\"createAccount\")\n      console.log(\"CONTINUE LOG STATUS \" + this.$store.state.isLoggedIn);\n      if (this.$store.state.isLoggedIn == true) {\n        try {\n          const token = localStorage.getItem('auth_token');\n          const email = localStorage.getItem('email');\n          const tickets = this.$store.state.currentFlightDetailed;\n          const ticketArray = [];\n          const ticketObject = {\n            departure: tickets.departure.airport,\n            destination: tickets.arrival.airport,\n            gate: tickets.departure.gate,\n            date: tickets.flight_date,\n            seat: \"e1\",\n            boardingTime: tickets.departure.scheduled.replace(/([+-]\\d{2}:\\d{2})$/, \"\") // Entfernt die Zeitzoneninformationen\n          };\n          // relevevanten ticket daten in objekt nehmen\n          console.log(ticketObject);\n          ticketArray.push(ticketObject);\n          const request = {\n            tickets: ticketArray,\n            email: email\n          };\n          // Senden der Anfrage mit nur dem Token\n          const response = await fetch(this.$store.state.urlObject.ticketsUrl + '/create', {\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify(request) // Das Token korrekt verpackt in ein JSON-Objekt\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n          }\n        } catch (error) {\n          console.error(\"Fehler bei der Token-Überprüfung:\", error);\n          this.isLoggedIn = false;\n        }\n      }\n      setTimeout(() => {\n        this.$router.push('/');\n      }, 5000);\n    }\n  }\n};","map":{"version":3,"names":["name","data","showModal","methods","handleReturn","console","log","$store","state","isLoggedIn","token","localStorage","getItem","email","tickets","currentFlightDetailed","ticketArray","ticketObject","departure","airport","destination","arrival","gate","date","flight_date","seat","boardingTime","scheduled","replace","push","request","response","fetch","urlObject","ticketsUrl","method","headers","body","JSON","stringify","ok","Error","status","error","setTimeout","$router"],"sources":["C:\\Users\\DUNG\\webtechprojekt_frontend\\src\\components\\ContinueButton.vue"],"sourcesContent":["<template>\r\n  <div class=\"Continue-button\">\r\n    <button class=\"continue-btn\" @click=\"handleReturn\">continue</button>\r\n  </div>\r\n  <div class=\"modal-container\" v-if=\"showModal\">\r\n    <div class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h1 class=\"title\">Thank you for your purchase</h1>\r\n        <img id=\"thumbsUp\" src = \"../assets/goodjob.jpg\"> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ContinueButton',\r\n  data() {\r\n    return {\r\n      showModal: false\r\n    }\r\n  },\r\n  methods:{\r\n\r\n    async handleReturn () {\r\n      this.showModal = true\r\n      //this.$store.dispatch(\"createAccount\")\r\n      console.log(\"CONTINUE LOG STATUS \"+this.$store.state.isLoggedIn)\r\n      if(this.$store.state.isLoggedIn == true){\r\n        try {\r\n    const token =   localStorage.getItem('auth_token'); \r\n    const email =     localStorage.getItem('email'); \r\n    const tickets = this.$store.state.currentFlightDetailed\r\n   \r\n    const ticketArray = []\r\n    \r\n    const ticketObject = {\r\n      departure:tickets.departure.airport,\r\n      destination:tickets.arrival.airport,\r\n      gate: tickets.departure.gate,\r\n      date: tickets.flight_date,\r\n      seat: \"e1\",\r\n      boardingTime: tickets.departure.scheduled.replace(/([+-]\\d{2}:\\d{2})$/, \"\") // Entfernt die Zeitzoneninformationen\r\n    }\r\n          // relevevanten ticket daten in objekt nehmen\r\n          console.log(ticketObject)\r\n          ticketArray.push(ticketObject)\r\n    const request = {\r\n      tickets:ticketArray,\r\n      email:email\r\n    }\r\n    // Senden der Anfrage mit nur dem Token\r\n    const response = await fetch(this.$store.state.urlObject.ticketsUrl + '/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(request) // Das Token korrekt verpackt in ein JSON-Objekt\r\n    });\r\n  \r\n\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n    }\r\n   \r\n\r\n  } catch (error) {\r\n    console.error(\"Fehler bei der Token-Überprüfung:\", error);\r\n    this.isLoggedIn = false;\r\n  }\r\n      }\r\n\r\n      setTimeout(() => {\r\n      this.$router.push('/');\r\n   }, 5000);\r\n     }\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.Continue-button {\r\n  width: 1400px;\r\n  margin: 50px auto;\r\n}\r\n\r\n.continue-btn {\r\n  background-color: #2c3855;\r\n  color: white;\r\n  border: none;\r\n  padding: 15px 20px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n  width: 100%;\r\n}\r\n\r\n.continue-btn:hover {\r\n  background-color: #357abd;\r\n}\r\n\r\n.modal-container {\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal {\r\n  background-color: #fefefe;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 30%;\r\n}\r\n\r\n.modal-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #2c3855;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.close-btn:hover {\r\n  background-color: #357abd;\r\n}\r\n</style>"],"mappings":";AAeA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAC;IAEN,MAAMC,YAAWA,CAAA,EAAK;MACpB,IAAI,CAACF,SAAQ,GAAI,IAAG;MACpB;MACAG,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU;MAC/D,IAAG,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,UAAS,IAAK,IAAI,EAAC;QACtC,IAAI;UACR,MAAMC,KAAI,GAAMC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;UAClD,MAAMC,KAAI,GAAQF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC/C,MAAME,OAAM,GAAI,IAAI,CAACP,MAAM,CAACC,KAAK,CAACO,qBAAoB;UAEtD,MAAMC,WAAU,GAAI,EAAC;UAErB,MAAMC,YAAW,GAAI;YACnBC,SAAS,EAACJ,OAAO,CAACI,SAAS,CAACC,OAAO;YACnCC,WAAW,EAACN,OAAO,CAACO,OAAO,CAACF,OAAO;YACnCG,IAAI,EAAER,OAAO,CAACI,SAAS,CAACI,IAAI;YAC5BC,IAAI,EAAET,OAAO,CAACU,WAAW;YACzBC,IAAI,EAAE,IAAI;YACVC,YAAY,EAAEZ,OAAO,CAACI,SAAS,CAACS,SAAS,CAACC,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE;UAC9E;UACM;UACAvB,OAAO,CAACC,GAAG,CAACW,YAAY;UACxBD,WAAW,CAACa,IAAI,CAACZ,YAAY;UACnC,MAAMa,OAAM,GAAI;YACdhB,OAAO,EAACE,WAAW;YACnBH,KAAK,EAACA;UACR;UACA;UACA,MAAMkB,QAAO,GAAI,MAAMC,KAAK,CAAC,IAAI,CAACzB,MAAM,CAACC,KAAK,CAACyB,SAAS,CAACC,UAAS,GAAI,SAAS,EAAE;YAC/EC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,eAAe,EAAE,UAAU1B,KAAK;YAClC,CAAC;YACD2B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,EAAE;UAChC,CAAC,CAAC;UAIF,IAAI,CAACC,QAAQ,CAACS,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwBV,QAAQ,CAACW,MAAM,EAAE,CAAC;UAC5D;QAGF,EAAE,OAAOC,KAAK,EAAE;UACdtC,OAAO,CAACsC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;UACzD,IAAI,CAAClC,UAAS,GAAI,KAAK;QACzB;MACI;MAEAmC,UAAU,CAAC,MAAM;QACjB,IAAI,CAACC,OAAO,CAAChB,IAAI,CAAC,GAAG,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACN;EAEH;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}