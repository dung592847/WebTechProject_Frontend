{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: {\n        firstName: '',\n        lastName: '',\n        country: '',\n        city: '',\n        phoneNumber: '',\n        address: '',\n        postalCode: '',\n        gender: '' // Standardwert auf \"male\"\n      }\n    };\n  },\n  methods: {\n    async updateAccount() {\n      try {\n        this.$store.commit(\"setUser\", this.user);\n        this.$store.dispatch(\"updateAccount\");\n        this.user = {\n          ...this.$store.state.user\n        };\n      } catch (error) {\n        console.error('Fehler beim Senden der Anfrage:', error);\n      }\n    },\n    async getUserData() {\n      try {\n        // Token aus dem Local Storage abrufen\n        const token = localStorage.getItem('auth_token');\n\n        // Sicherstellen, dass das Token existiert\n        if (!token) {\n          throw new Error('Kein Token gefunden');\n        }\n\n        // Senden der Anfrage mit dem Token im Authorization-Header\n        const response = await fetch(this.$store.state.urlObject.userUrl + '/users', {\n          method: 'GET',\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            // Token im Header hinzufügen\n            \"Content-Type\": \"application/json\" // Optional, falls notwendig\n          }\n        });\n\n        // Prüfen, ob die Anfrage erfolgreich war\n        if (!response.ok) {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        }\n\n        // Die Antwort parsen\n        const responseObject = await response.json();\n        console.log(responseObject);\n\n        // Benutzer aus der Antwort extrahieren und speichern\n        const responseUser = responseObject.user;\n        const filteredUser = {\n          firstName: responseUser.firstName,\n          lastName: responseUser.lastName,\n          city: responseUser.city,\n          country: responseUser.country,\n          phoneNumber: responseUser.phoneNumber,\n          address: responseUser.address,\n          postalCode: responseUser.postalCode,\n          gender: responseUser.gender\n        };\n        this.$store.commit(\"setUser\", filteredUser);\n        this.user = {\n          ...this.$store.state.user\n        };\n      } catch (error) {\n        console.error(\"Fehler bei der Token-Überprüfung:\", error);\n        this.isLoggedIn = false;\n      }\n    }\n  },\n  mounted() {\n    this.getUserData();\n    this.user = {\n      ...this.$store.state.user\n    }; // Kopiere die Benutzerdaten aus dem Store in das `user`-Objekt\n    console.log(this.user);\n  }\n};","map":{"version":3,"names":["data","user","firstName","lastName","country","city","phoneNumber","address","postalCode","gender","methods","updateAccount","$store","commit","dispatch","state","error","console","getUserData","token","localStorage","getItem","Error","response","fetch","urlObject","userUrl","method","headers","ok","status","responseObject","json","log","responseUser","filteredUser","isLoggedIn","mounted"],"sources":["C:\\Users\\DUNG\\webtechprojekt_frontend\\src\\components\\Account.vue"],"sourcesContent":["<template>\r\n    <div class=\"account-container\">\r\n      <h1>Account</h1>\r\n      <form @submit.prevent=\"updateAccount\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name:</label>\r\n          <input v-model=\"user.firstName\" id=\"firstName\" type=\"text\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name:</label>\r\n          <input v-model=\"user.lastName\" id=\"lastName\" type=\"text\" >\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"country\">Country:</label>\r\n          <input v-model=\"user.country\" id=\"country\" type=\"text\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"city\">City:</label>\r\n          <input v-model=\"user.city\" id=\"city\" type=\"text\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"phoneNumber\">Phone Number:</label>\r\n          <input v-model=\"user.phoneNumber\" id=\"phoneNumber\" type=\"tel\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">Address:</label>\r\n          <input v-model=\"user.address\" id=\"address\" type=\"text\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"postalCode\">Zip code:</label>\r\n          <input v-model=\"user.postalCode\" id=\"postalCode\" type=\"text\" />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">Gender:</label>\r\n          <select v-model=\"user.gender\" id=\"gender\">\r\n            <option value=\"male\">male</option>\r\n            <option value=\"female\">female</option>\r\n            <option value=\"other\">other</option>\r\n          </select>\r\n        </div>\r\n  \r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        user: {\r\n          firstName: '',\r\n          lastName: '',\r\n          country: '',\r\n          city: '',\r\n          phoneNumber: '',\r\n          address: '',\r\n          postalCode: '',\r\n          gender: '' // Standardwert auf \"male\"\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      async updateAccount() {\r\n      try {\r\n        this.$store.commit(\"setUser\",this.user)\r\n        this.$store.dispatch(\"updateAccount\")\r\n        this.user = { ...this.$store.state.user }\r\n      } catch (error) {\r\n        console.error('Fehler beim Senden der Anfrage:', error);\r\n      }\r\n    },\r\n    async getUserData() {\r\n  try {\r\n    // Token aus dem Local Storage abrufen\r\n    const token = localStorage.getItem('auth_token'); \r\n\r\n    // Sicherstellen, dass das Token existiert\r\n    if (!token) {\r\n      throw new Error('Kein Token gefunden');\r\n    }\r\n\r\n    // Senden der Anfrage mit dem Token im Authorization-Header\r\n    const response = await fetch(this.$store.state.urlObject.userUrl + '/users', {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`, // Token im Header hinzufügen\r\n        \"Content-Type\": \"application/json\", // Optional, falls notwendig\r\n      },\r\n    });\r\n\r\n    // Prüfen, ob die Anfrage erfolgreich war\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP-Fehler! Status: ${response.status}`);\r\n    }\r\n\r\n    // Die Antwort parsen\r\n    const responseObject = await response.json();\r\n    console.log(responseObject);\r\n\r\n    // Benutzer aus der Antwort extrahieren und speichern\r\n    const responseUser = responseObject.user;\r\n\r\n    const filteredUser = {\r\n     firstName: responseUser.firstName,\r\n        lastName: responseUser.lastName,\r\n        city: responseUser.city,\r\n        country: responseUser.country,\r\n        phoneNumber: responseUser.phoneNumber,\r\n        address: responseUser.address,\r\n        postalCode: responseUser.postalCode,\r\n        gender: responseUser.gender\r\n    };\r\n\r\n    this.$store.commit(\"setUser\", filteredUser);\r\n    this.user = { ...this.$store.state.user };\r\n\r\n  } catch (error) {\r\n    console.error(\"Fehler bei der Token-Überprüfung:\", error);\r\n    this.isLoggedIn = false;\r\n  }\r\n}\r\n  \r\n     \r\n    },\r\n    mounted() {\r\n    this.getUserData()\r\n    this.user = { ...this.$store.state.user }; // Kopiere die Benutzerdaten aus dem Store in das `user`-Objekt\r\n    console.log(this.user)\r\n    \r\n  }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .account-container {\r\n    max-width: 800px;\r\n    margin: 50px auto;\r\n    padding: 1rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  input,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button {\r\n    padding: 0.8rem 1.5rem;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}